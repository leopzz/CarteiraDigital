@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
    <title>Login</title>
</head>
<body>
    <header>
        <div class="container body-content">
            <nav class="navbar navbar-expand-lg fixed-top" style="top: 0px; background-color: rgb(245 245 245); box-shadow: 0px 0px 8px 0px; color: #3fbaee ">
                <div class="container-fluid sticky-top fixed-top col-lg-6 col-12 col-md-10" style="height: 60px">
                    <a class="navbar-brand fs-4" href="/Adm/Index" style="margin-left: 30px; transform: translateY(-2px)">Carteira Digital</a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarNavDropdown">
                        <ul class="navbar-nav d-flex col-10 justify-content-around">
                            <li class="nav-item dropdown fs-5">
                                <a class="nav-link" href="/Adm/Relatorio" role="button" style="padding-left: 30px">
                                    Relatório
                                </a>
                            </li>
                            <li class="nav-item fs-5">
                                <a class="nav-link n" href="/Adm/Movimentacao">Movimentação</a>
                            </li>
                            <li class="nav-item fs-5">
                                <a class="nav-link" href="#">Adm - <span data-bind="text: Nome"></span></a>
                            </li>
                        </ul>
                        <div class="col-12 text-center">
                            <a class="nav-link fs-5" onclick="{Sair()}" href="#" style="color: red">Sair</a>
                        </div>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    <div class="container-fluid text-center" style="margin-top: 100px;">
        <div style="margin: 30px">
            <a class="fs-4 text-decoration-none navbar-brand" style="margin: 50px"><span data-bind="text: Nome"></span> - Saldo atual: R$<span data-bind="text: Saldo"></span></a>
        </div>
        <div class="card shadow p-3 mb-5 bg-body-tertiary rounded col-4 m-auto mb-4" style="border: none; padding-bottom: 30px;">
            <div>
                <a class="navbar-brand fs-4">Gerar Movimentação</a>
                <hr style="color: rgb(200 200 200)" />
            </div>
            <form class="m-auto col-6 gap-3 d-flex flex-column" style="padding-top: 15px">
                <label>Tipo de Movimentação</label>
                <div class="form-group d-flex justify-content-center gap-4">
                    <select class="form-control form-select" id="exampleFormControlSelect1" data-bind="value: Tipo">
                        <option>Entrada</option>
                        <option>Saída</option>
                    </select>
                </div>
                <label>Descrição</label>
                <div class="form-group d-flex justify-content-center gap-4">
                    <textarea class="form-control" id="valorDescricao" rows="3" data-bind="value: Descricao" required></textarea>
                </div>
                <label>Valor</label>
                <div class="form-group d-flex justify-content-center gap-4">
                    <input class="form-control" type="text" id="valorInput" data-bind="value: Valor" placeholder="Valor" />
                </div>
                <div>
                    <button class="btn btn-success" type="submit" data-bind="click: Send.bind(Tipo())">Concluir</button>
                </div>
            </form>
        </div>
    </div>
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script type="text/javascript">

        if (sessionStorage.getItem("Saldo") == null && sessionStorage.getItem("Id") == null) {
            alert("Nenhum usuário selecionado")
            window.location.href = "/Adm/Index"
        } else {
            var UserId = sessionStorage.getItem("Id")
            $.ajax({
                async: false,
                type: "POST",
                url: "/Repositorio/getSaldo",
                content: "application/json; charset=utf-8",
                dataType: "json",
                data: {
                    Id: UserId
                },
                success: function (Saldo) {
                    sessionStorage.setItem("Saldo", Saldo)
                },
                error: function () {
                    alert("error");
                }
            });
        }
        var DATA;
        var Id = sessionStorage.getItem("Id")
        $.ajax({
            async: false,
            type: "POST",
            url: "/Repositorio/getUserInfo",
            content: "application/json; charset=utf-8",
            dataType: "json",
            data: { Id: Id },
            success: function (Response) {
                sessionStorage.setItem("Saldo", Response.PES_SALDO)
                DATA = Response
            },
            error: function () {
                alert("error");
            }
        });

        function Send(prop) {
            if (isNaN(prop.Valor())) {
                alert("Digite um número válido")
                $('#valorInput').addClass('is-invalid');
                return
            }
            if (prop.Valor() == null || prop.Valor() == "") {
                console.log("Caiu")
                $('#valorInput').addClass('is-invalid');
                if (prop.Descricao() == null || prop.Descricao() == "") {
                    $('#valorDescricao').addClass('is-invalid');
                    alert("Valores Inválidos")
                }
                return
            }
            if (prop.Descricao() == null || prop.Descricao() == "") {
                $('#valorDescricao').addClass('is-invalid');
                alert("Valores Inválidos")
                return
            }


            var Id = sessionStorage.getItem("Id")
            var today = new Date();
            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();
            var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
            var currentDate = date + ' ' + time;
            var Valor = prop.Valor()
            if (prop.Tipo() == "Saída") {
                var Saldo = sessionStorage.getItem("Saldo")
                if (parseInt(prop.Valor()) > parseInt(Saldo)) {
                    alert("Não é permitido ter um saldo negativo")
                    return
                }
                console.log(DATA)
                if (parseFloat(DATA.PES_SALDO) - parseFloat(prop.Valor()) < parseFloat(DATA.PES_MINIMO)) {
                    alert("Abaixo do Limite!")
                }
                var Tipo = "Saida"
                $.ajax({
                    type: "POST",
                    url: "/Repositorio/" + Tipo,
                    content: "application/json; charset=utf-8",
                    dataType: "json",
                    data: {
                        PES_ID: Id,
                        SAI_DATA: currentDate,
                        SAI_DESCRICAO: prop.Descricao(),
                        SAI_VALOR: Valor,
                        PES_SALDO: JSON.stringify(parseFloat(sessionStorage.getItem("Saldo")) - parseFloat(Valor))
                    },
                    success: function (Usuario) {
                        var Id = localStorage.getItem("Id")
                        $.ajax({
                            type: "POST",
                            url: "/Repositorio/getSaldo",
                            content: "application/json; charset=utf-8",
                            dataType: "json",
                            data: {
                                Id: Id
                            },
                            success: function (Saldo) {
                                sessionStorage.setItem("Saldo", Saldo)
                            },
                            error: function () {
                                alert("error");
                            }
                        });
                        window.location.href = "/Home/Movimentacao";
                    },
                    error: function () {
                        alert("error");
                    }
                });
            } else {
                var Tipo = "Entrada"
                $.ajax({
                    type: "POST",
                    url: "/Repositorio/" + Tipo,
                    content: "application/json; charset=utf-8",
                    dataType: "json",
                    data: {
                        PES_ID: Id,
                        ENT_DATA: currentDate,
                        ENT_DESCRICAO: prop.Descricao(),
                        ENT_VALOR: Valor,
                        PES_SALDO: JSON.stringify(parseFloat(sessionStorage.getItem("Saldo")) + parseFloat(Valor)),
                    },
                    success: function (Usuario) {
                        var Id = localStorage.getItem("Id")
                        $.ajax({
                            type: "POST",
                            url: "/Repositorio/getSaldo",
                            content: "application/json; charset=utf-8",
                            dataType: "json",
                            data: {
                                Id: Id
                            },
                            success: function (Saldo) {
                                sessionStorage.setItem("Saldo", Saldo)
                            },
                            error: function () {
                                alert("error");
                            }
                        });
                        window.location.href = "/Adm/Movimentacao";
                    },
                    error: function () {
                        alert("error");
                    }
                });
            }


        }
        if (sessionStorage.getItem("Saldo") == null && sessionStorage.getItem("Id") == null) {
            alert("Nenhum usuário selecionado")
            window.location.href = "/Adm/Index"
        } else {
            var UserId = sessionStorage.getItem("Id")
            $.ajax({
                type: "POST",
                url: "/Repositorio/getSaldo",
                content: "application/json; charset=utf-8",
                dataType: "json",
                data: {
                    Id: UserId
                },
                success: function (Saldo) {
                    sessionStorage.setItem("Saldo", Saldo)
                },
                error: function () {
                    alert("error");
                }
            });
        }

        function movimentacao(Saldo, Tipo, Descricao, Valor, Usuario, Nome) {
            this.Tipo = Tipo
            this.Descricao = Descricao
            this.Valor = Valor
            this.Saldo = Saldo
            this.Usuario = Usuario
            this.Nome = Nome
        }
        function movimentacaoViewModel(prop) {
            this.Tipo = ko.observable(prop.Tipo);
            this.Descricao = ko.observable(prop.Descricao);
            this.Valor = ko.observable(prop.Valor);
            this.Saldo = ko.observable(prop.Saldo);
            this.Nome = ko.observable(prop.Nome);          
        }
        var prop = new movimentacao("", "")
        var Movimento = new movimentacaoViewModel(prop)
        Movimento.Saldo(sessionStorage.getItem("Saldo"))
        Movimento.Nome(sessionStorage.getItem("Nome"))
        ko.applyBindings(Movimento);
        
    </script>




</body>
</html>
