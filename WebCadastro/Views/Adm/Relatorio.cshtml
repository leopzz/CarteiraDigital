@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
    <title>Login</title>
</head>
<body>
    <header>
        <div class="container body-content">
            <nav class="navbar navbar-expand-lg fixed-top" style="top: 0px; background-color: rgb(245 245 245); box-shadow: 0px 0px 8px 0px; color: #3fbaee ">
                <div class="container-fluid sticky-top fixed-top col-lg-6 col-12 col-md-10" style="height: 60px">
                    <a class="navbar-brand fs-4" href="/Adm/Index" style="margin-left: 30px; transform: translateY(-2px)">Carteira Digital</a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarNavDropdown">
                        <ul class="navbar-nav d-flex col-10 justify-content-around">
                            <li class="nav-item dropdown fs-5">
                                <a class="nav-link" href="/Adm/Relatorio" role="button" style="padding-left: 30px">
                                    Relatório
                                </a>
                            </li>
                            <li class="nav-item fs-5">
                                <a class="nav-link n" href="/Adm/Movimentacao">Movimentação</a>
                            </li>
                            <li class="nav-item fs-5">
                                <a class="nav-link" href="#">Adm - <span data-bind="text: Nome"></span></a>
                            </li>
                        </ul>
                        <div class="col-12 text-center">
                            <a class="nav-link fs-5" onclick="{Sair()}" href="#" style="color: red">Sair</a>
                        </div>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    <div class="container text-center" style="margin-top: 100px;">
        <div style="margin: 15px">
            <a class="navbar-brand fs-4">Relatório - <span data-bind="text: Nome"></span></a>
        </div>
        <form class="form-control d-flex flex-row justify-content-around col-8">
            <div class="d-flex flex-column">
                <label>Tipo</label>
                <select class="form-control form-select" id="exampleFormControlSelect1" data-bind="value: Tipo">
                    <option>Entrada e Saída</option>
                    <option>Entrada</option>
                    <option>Saída</option>
                </select>
            </div>
            <div class="d-flex flex-column">
                <label>Data Início</label>
                <input type="date" class="btn btn-default" style="border: 1px solid lightgray" data-bind="value: DataIni" />
            </div>
            <div class="d-flex flex-column">
                <label>Data Fim</label>
                <input type="date" class="btn btn-default" style="border: 1px solid lightgray" data-bind="value: DataFim" />
            </div>
            <div class="d-flex flex-column justify-content-center">
                <button class="btn btn-success h-75" data-bind="click: call.bind(Tipo())">Aplicar</button>
            </div>
        </form>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Data</th>
                    <th scope="col">Descrição</th>
                    <th scope="col">Tipo (E/S)</th>
                    <th scope="col">Valor</th>
                    <th scope="col">Saldo</th>
                </tr>
            </thead>
            <tbody id="Tabela">
            </tbody>
        </table>
    </div>


    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <script type="text/javascript">
        var UserId = sessionStorage.getItem("Id")
        if (UserId == null) {
            alert("Nenhum usuário selecionado")
            window.location.href = "/Adm/Index"

        } else {
            $.ajax({
                type: "POST",
                url: "/Repositorio/UltimasMovimentacoes",
                content: "application/json; charset=utf-8",
                dataType: "json",
                data: {
                    Id: UserId
                },
                success: function (Res) {
                    var ResSor = Res.sort((x, i) => parseInt(x.Data.split("(")[1].split(")")[0]) - parseInt(i.Data.split("(")[1].split(")")[0]))
                    var ResLis = Res.reverse()
                    console.log(Res)
                    renderView(Res)
                },
                error: function () {
                    alert("error");
                }
            });
        }
        function call(Valor) {
            console.log("Valor", Valor)
            console.log(Valor.DataIni())
            Render(Valor.Tipo(), Valor.DataIni(), Valor.DataFim())
        }


        function Render(Tipo, dataIni, dataFim) {
            var User = sessionStorage.getItem("Id")
            $.ajax({
                type: "POST",
                url: "/Repositorio/UltimasMovimentacoes",
                content: "application/json; charset=utf-8",
                dataType: "json",
                data: {
                    Id: UserId
                },
                success: function (Res) {
                    var ResSor = Res.sort((x, i) => parseInt(x.Data.split("(")[1].split(")")[0]) - parseInt(i.Data.split("(")[1].split(")")[0]))
                    var ResLis = Res.reverse()
                    
                    if (dataIni == undefined) {
                        var DataIni = null
                    } else {
                        var DataIni = new Date(dataIni)
                    }
                    if (dataFim == undefined) {
                        var DataFim = null
                    } else {
                        var DataFim = new Date(dataFim)
                    }
                    if (DataFim == "Invalid Date") {
                        DataFim = null
                    }
                    if (DataIni == "Invalid Date") {
                        DataIni = null
                    }


                    if (Tipo == "Entrada e Saída") {
                        if (DataIni == null && DataFim == null) {
                            renderView(Res)
                        } else if (DataFim == null) {
                            var filter = Res.filter(i => parseInt(i.Data.split("(")[1].split(")")[0]) > DataIni)
                            renderView(filter)
                        } else if (DataIni == null) {
                            var filter = Res.filter(i => parseInt(i.Data.split("(")[1].split(")")[0]) < DataFim)
                            renderView(filter)
                        } else {
                            var filter = Res.filter(i => parseInt(i.Data.split("(")[1].split(")")[0]) < DataFim && parseInt(i.Data.split("(")[1].split(")")[0]) > DataIni)
                            renderView(filter)
                        }
                    } else {

                        resFilterTipo = Res.filter(i => i.Tipo == Tipo)
                        if (DataIni == null && DataFim == null) {
                            renderView(resFilterTipo)
                        } else if (DataFim == null) {
                            console.log(DataFim)
                            console.log(DataIni.getTime(), parseInt(resFilterTipo[0].Data.split("(")[1].split(")")[0]))
                            var filtered = resFilterTipo.filter(i => parseInt(i.Data.split("(")[1].split(")")[0]) > DataIni.getTime())
                            renderView(filtered)
                        } else if (DataIni == null) {
                            var filter = resFilterTipo.filter(i => parseInt(i.Data.split("(")[1].split(")")[0]) < DataFim.getTime())
                            renderView(filter)
                        } else {
                            var filter = resFilterTipo.filter(i => parseInt(i.Data.split("(")[1].split(")")[0]) < DataFim.getTime() && parseInt(i.Data.split("(")[1].split(")")[0]) > DataIni.getTime())
                            renderView(filter)
                        }
                    }
                },
                error: function () {
                    alert("error");
                }
            });

        }
        function renderView(Res) {
            $("#Tabela").html('').appendTo($("#Tabela"));
            for (var i in Res) {

                var Id = Res[i].Numero
                var Data0 = Res[i].Data.split("(")[1]
                var Data1 = Data0.split(")")[0]
                var Data = new Date(parseInt(Data1)).toLocaleDateString()

                var ValorStr = Res[i].Valor.replace(",", ".")
                var ValorFlt = parseFloat(ValorStr)
                var Valor = Math.floor(ValorFlt * 1000) / 1000

                var SaldoStr = Res[i].Saldo.replace(",", ".")
                var SaldoFlt = parseFloat(SaldoStr).toFixed(3)
                var Saldo = Math.floor(SaldoFlt * 1000) / 1000
                var Desc = Res[i].Descricao


                $("#Tabela").add('<tr id=' + Id + '><th scope="row">' + Id + '</th></tr>').appendTo($("#Tabela"));
                $(document.getElementById(Id)).add('<td>' + Data + '</td>').appendTo(document.getElementById(Id));
                $(document.getElementById(Id)).add('<td>' + Desc + '</td>').appendTo(document.getElementById(Id));
                $(document.getElementById(Id)).add('<td>' + Res[i].Tipo + '</td>').appendTo(document.getElementById(Id));
                $(document.getElementById(Id)).add('<td> R$' + Valor + '</td>').appendTo(document.getElementById(Id));
                $(document.getElementById(Id)).add('<td> R$' + Saldo + '</td>').appendTo(document.getElementById(Id));
            }
        }







        if (localStorage.getItem("Id") != 3) {
            localStorage.clear()
            window.location.href = "/Login/Index"
        }
        function Sair() {
            localStorage.clear()
            window.location.href = "/Login/Index"
        }


        function movimentacao(Saldo, DataIni, DataFim, Tipo, Usuario, Nome) {
            this.Saldo = Saldo
            this.DataIni = DataIni
            this.DataFim = DataFim
            this.Tipo = Tipo
            this.Usuario = Usuario
            this.Nome = Nome
        }
        function movimentacaoViewModel(prop) {
            this.Saldo = ko.observable(prop.Saldo);
            this.DataIni = ko.observable(prop.DataIni);
            this.DataFim = ko.observable(prop.DataFim);
            this.Tipo = ko.observable(prop.Tipo);
            this.Usuario = localStorage.getItem("Nome");
            this.Nome = ko.observable(prop.Nome);

        }

        var prop = new movimentacao()
        var Movimento = new movimentacaoViewModel(prop)
        Movimento.Saldo(localStorage.getItem("Saldo"))
        Movimento.Nome(sessionStorage.getItem("Nome"))
        ko.applyBindings(Movimento);
    </script>




</body>
</html>
