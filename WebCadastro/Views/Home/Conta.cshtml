<div class="container-fluid text-center" style="margin-top: 50px;">
    <div style="margin: 30px">
        <a class="fs-4 text-decoration-none navbar-brand" style="margin: 50px">Saldo atual: R$<span data-bind="text: Saldo"></span></a>
    </div>
    <div class="card shadow p-3 mb-5 bg-body-tertiary rounded col-8 m-auto mb-4" style="border: none; padding-bottom: 30px;">
        <div>
            <a class="navbar-brand fs-4">Configurações da Conta</a>
            <hr style="color: rgb(200 200 200)" />
        </div>
        <form class="d-flex flex-row justify-content-center">
            <div class="m-auto col-6 gap-3 d-flex flex-column" style="padding-top: 15px">

                <label>Nome</label>
                <div class="form-group d-flex justify-content-center gap-4">
                    <input type="text" class="disabled form-control" placeholder="" data-bind="value: Nome, attr: {placeholder: placeNome}" />
                </div>
                <label>Email</label>
                <div class="form-group d-flex justify-content-center gap-4">
                    <input type="text" class="disabled form-control" placeholder="" data-bind="value: Email, attr: {placeholder: placeEmail}" />
                </div>
                <label>Alterar Senha</label>
                <div class="form-group d-flex justify-content-center gap-4">
                    <input type="text" class="form-control" placeholder="Nova Senha" data-bind="value: Senha" />
                </div>

            </div>

            <div class="m-auto col-6 gap-3 d-flex flex-column" style="padding-top: 15px">
                <label>Limite de Gasto</label>
                <div class="form-group d-flex justify-content-center gap-4">
                    <input type="text" class="form-control" placeholder="R$500" data-bind="value: Limite, attr: {placeholder: placeLimite}" />
                </div>
                <label>Aviso de valor mínimo em conta</label>
                <div class="form-group d-flex justify-content-center gap-4">
                    <input type="text" class="form-control" placeholder="R$100" data-bind="value: Minimo, attr: {placeholder: placeMinimo}" />
                </div>
                <label>Salário</label>
                <div class="form-group d-flex justify-content-center gap-4">
                    <input type="text" class="form-control" placeholder="R$1000" data-bind="value: Salario, attr: {placeholder: placeSalario}" />
                </div>


            </div>
        </form>
        <div class="d-flex flex-row col-12 justify-content-around">
            <div style="margin-top: 20px">
                <button class="btn btn-success" type="submit" data-bind="click: Send.bind(Nome())">Atualizar</button>
            </div>
        </div>

    </div>
</div>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/knockout-3.5.1.js"></script>
<script type="text/javascript">
    var Id = localStorage.getItem("Id")
    var DATA;
    $.ajax({
        async: false,
        type: "POST",
        url: "/Repositorio/getUserInfo",
        content: "application/json; charset=utf-8",
        dataType: "json",
        data: { Id: Id },
        success: function (Response) {
            DATA = Response
        },
        error: function () {
            alert("error");
        }
    });
    console.log(DATA)
    


    function Send(prop) {
        if (prop.Nome() == undefined || prop.Nome() == "") {
            var Nome = DATA.PES_NOME
        } else {
            var Nome = prop.Nome()
        }
        if (prop.Email() == undefined || prop.Email() == "") {
            var Email = DATA.PES_EMAIL
        } else {
            var Email = prop.Salario()
        }
        if (prop.Senha() == undefined || prop.Senha() == "") {
            var Senha = DATA.PES_SENHA
        } else {
            var Senha = prop.Senha()
        }
        if (prop.Limite() == undefined || prop.Limite() == "") {
            var Limite = DATA.PES_LIMITE
        } else {
            var Limite = prop.Limite()
        }
        if (prop.Minimo() == null || prop.Minimo() == "") {
            var Minimo = DATA.PES_MINIMO
        } else {
            var Minimo = prop.Minimo()
        }
        if (prop.Salario() == undefined || prop.Salario() == "") {
            var Salario = DATA.PES_SALARIO
        } else {
            var Salario = prop.Salario()
        }
        $.ajax({
            async: false,
            type: "POST",
            url: "/Repositorio/Atualizar",
            content: "application/json; charset=utf-8",
            dataType: "json",
            data: {
                PES_SALDO: localStorage.getItem("Saldo"), PES_ID: localStorage.getItem("Id"),
                PES_NOME: Nome, PES_EMAIL: Email,
                PES_SENHA: Senha, PES_SALARIO: Salario,
                PES_LIMITE: Limite, PES_MINIMO: Minimo
            },
            success: function (Usuario) {
                window.location.href = "/Home/Conta";
            },
            error: function () {
                alert("error");
            }
        });
    }
    function movimentacao(Saldo, Usuario, Nome, Email, Salario, Limite, Minimo, Senha) {
        this.Saldo = Saldo
        this.Usuario = Usuario
        this.Nome = Nome
        this.Email = Email
        this.Salario = Salario
        this.Limite = Limite
        this.Minimo = Minimo
        this.Senha = Senha
    }
    function movimentacaoViewModel(prop) {
        this.Usuario = localStorage.getItem("Nome")
        this.Saldo = localStorage.getItem("Saldo")
        this.Nome = ko.observable(prop.Nome)
        this.Email = ko.observable(prop.Email)
        this.Salario = ko.observable(prop.Salario)
        this.Limite = ko.observable(prop.Limite)
        this.Minimo = ko.observable(prop.Minimo)
        this.Senha = ko.observable(prop.Senha)
        this.placeNome = ko.observable(DATA.PES_NOME);
        this.placeEmail = ko.observable(DATA.PES_EMAIL);
        this.placeSalario = ko.observable("R$"+DATA.PES_SALARIO);
        this.placeLimite = ko.observable("R$"+DATA.PES_LIMITE);
        this.placeMinimo = ko.observable("R$"+DATA.PES_MINIMO);
    }

    var prop = new movimentacao()
    var Movimento = new movimentacaoViewModel(prop)
    ko.applyBindings(Movimento);
</script>